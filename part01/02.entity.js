// 목표: 엔터티 이해
// 참고: 패캠 강의/ 기출 분석

// 1. 엔터티(Entity) 
// 정의: 업무에 필요한 정보를 저장/관리하기 위한 영속적으로 존재하는 단위로 "실제", "독립체" => 데이터 모델링 사용되는 객체
// - 엔터티 타입: 엔티티의 집합
// - 엔터티: 엔티티 타입 속한 하나의 인스턴스 
// - 엔터티 타입은 정보가 저장될 수 있는 사람, 장소, 물건, 개념 정의
// - DB 구현 시 엔터티는 테이블에 속함.


// 2. 엔터티 타입 특징
// 1) 시스템에서 반드시 업무에 필요, 관리되어야 하는 정보 
//    => 시스템 대상 구축 시 해당 엔터티 타입이 필요한가 판단 여부 중요
// 2) 유일한 식별자에 의해 식별가능  EX- 주민등록번호, 상품번호
//  - 어떤 엔터티 타입이든 식별자 부여(유일)
// -  각 엔터티가 식별자에 의해 한개씩만 존재 여부 검증 필요
// 3) "영속적"존재하는 엔터티 집합 => 엔터티 집합은 "반드시 2개 이상의 엔티티 구성"
// 4) 엔터티 사용 => 반드시 업무 프로세스에 사용할 것(업무 분석을 제대로!)
// 5) 엔터티 타입은 반드시 속성(Attribute) 포함
//  -속성만 포함하지 않고 엔터티 집합만 있는 경우 => 업무 분석 제대로 x, 속성 정보가 누락되었음.
// 6) 엔터티 타입은 다른 엔터티 타입의 최소 한 개 이상의 관계 포함.


// 3. 엔터티 타입 분류
// * 성격에 따른 분류 : 유무에 따라 분류
// * 업무 구성에 따른 분류 : 발생 시점에 따라 분류

// 1) 성격에 따른 분류
// -유형: 물리적 형태 o, 지속적 활용
// -개념: 물리적 형태 x, 관리해야 함 개념적 정보로 구분(상품, 조직, 장소)
// -사건: "업무 수행 발생, 일반적 발생량 많음"

// 2) 업무구성에 따른 분류
// 1> 기본 엔터티(Key Entity) 타입 : 업무 존재하는 정보, 다른 엔터티 타입과 관계에 의해 생성되지 않고 
//    독립적 생성, 가신은 부모역할"
// 2> 중심엔터티 타입: 기본 엔터티 타입에서 발생됨 그 업무에서 중심적 역할
// 3> 행위 엔터티 타입: 두 개 이상의 부모 엔티티 타입에서 발생, "내용 자주 바뀜, 데이터 증가"


// 4. 엔터티 타입 명명 규칙
// - 현업에서 자주 사용하는 약어 사용, 현업 시 백과사전 이용
// - 혼자만 아는 약어 사용 x
// - 단수 명사 사용, 절대 동사 아님
// - 엔터티 타입에 부여되는 이름은 유일함.
// - 엔터티 타입 생성되는 의미에 따라 이름 부여


// 5. 속성의 개념
// 정의: 엔터티에서 분리되지 않는 최소 데이터 단위
// -엔터티는 고유의 성격을 표현하는 속성의 정보 한개 이상의 표현
// - 속성은 엔터티 타입에 대한 구체적 정보, 각각의 속성은 구체적 값을 갖음


// 6. 속성의 분류
// * 기본 속성 : "업무 분석"을 통해 정의한 속성
// * 설계 속성 : 업무 존재x, "설계"하면서 도출되는 속성
// * 파생 속성 : "계산"이나 변형되어 생성하는 속성


// 7. 속성의 명명 
//  - 인터페이스 나타나므로, 정확한 이름 부여
//  - 용어 혼란 피하기 위해 용어 사전 사용
//  - 속성 부여 원칙 준수
//    1> 현업 용어 사용
//    2> 명사형 이용함, 수식 x
//    3> 공용화된 용어 사용
//    4> 속성 이름도 유일하게 사용함


// 8. 엔터티, 인스턴스, 속성, 속성값의 관계 정리
// - 한 개의 엔터티는 두 개 이상의 인스턴스의 집합이어야 한다.
// - 한 개의 엔터티는 두 개 이상의 속성을 갖는다.
// - 한 개의 속성은 한 개의 속성값을 갖는다.
// - 하나의 인스턴에서 각각의 속성은 한 개의 속성값을 가져야 한다.


// 식별자 
// 하나의 엔터티에 구성된 여러 개의 속성 중에서 엔터티 대표하는 속성임
// 1.  엔터티 내 각 인스터스(객체) 구분할 수 있는 구분자
// 2. 타 엔터티와 참조관계 연결할 수 있는 식별자
// 3. 유일성, 최소성, 불변성, 존재성 만족할 것

// 1-1. 키 종류
// 1) Primary Key: 후보 키 중 대표하는 키
// 2) 후보키: 유일성, 최소성 만족하는 키
// 3) 슈퍼 키: 유일성은 만족하지만 최소성 만족하지 않는 키
// 4) 대체 키: 여러 후보 키 중 기본키 선정하고 남은 키
// 5) 외래 키: 참조무결성으로 확인되는 키, 허용된 값만 db에 저장으로 사용

// 1-2. 식별자 분류
// - 대표성 여부:  주식별자 vs 보조 식별자
// * 주식별자 : 유일성과 최소성 만족하면서 엔터티 대표함, 엔터티 내 각 인스턴스 유일 구분하는 식별자
// * 보조식별자 :  엔터티 내 각 인스턴스 구분할 수 있지만 대표성 가지지 못해 참조 관계 연결 못함.

// - 생성 여부 :  내부식별자 vs 외부 식별자
// * 내부 식별자 :  엔터티 내부에서 생성되는 식별자
// * 외부 식별자 :  다른 엔터티 관계로 인해 만들어지는 식별자

// - 속성 수 :  단일 식별자 vs 복합 식별자
// * 단일 식별자: 하나의 속성 구성
// * 복합 식별자 :  2개 이상의 속성 구성

// - 대체 여부 :  본질 식별자 vs 인조 식별자
// * 본질 식별자 :  비즈니스 프로세스에서 만들어지는 식별자
// * 인조 식별자:  인위적 만들어지는 식별자


// 1-2 식별자와 비식별자 관계
// * 식별자 관계 
// - 부모 엔터티의 주식별자가 자식 엔터티의 주식별자로 상속되는 경ㄴ우
// - 관계의 강도: 강한 관계
// - 표기 방법:  실선
// - SQL 명령문 복잡, 오류가능성 커질 수 있음
// - 반드시 부모 엔터티에 종속, 자식 주식별자 구성에 부모 식별자 포함 필요

// * 비식별자 관계
// - 부모 엔터티의 주식별자가 자식 엔터티의 주식별자가 아닌 일반 속성으로 상속되는 경우
// - 관계의 강도: 약한관계
// - 표기 방법: 점선
// - 과도한 조인을 유발하게 함
// - 자식 주식별자 구성을 독립적으로 구성, 자식 주식별자 구성에 부모 주식별자 부분 필요함